/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/*you need to nodify thise part in all db connection { namedb", "name-local", "password" }*/

package AppPack;

import java.awt.HeadlessException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author eddafir-mohamed-amine
 */
public final class AppInterface extends javax.swing.JFrame {
    private JFrame jframe;
    
    
    
    Connection sqlcon = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    
    public AppInterface() throws SQLException{
        initComponents();
        GetDataTable();
        showTableData();
    }
    
    public void GetDataTable() {
        String url = "jdbc:mysql://localhost/stockmts";
        String utilisateur = "root";
        String motDePasse = "Ay1425@@";

        try (Connection sqlcon = DriverManager.getConnection(url, utilisateur, motDePasse);
            
            PreparedStatement pst = sqlcon.prepareStatement("SELECT * FROM stocktable ORDER BY id");
            ResultSet rs = pst.executeQuery()) {
            
        }catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Erreur lors de la connexion à la base de données : " + e.getMessage());
        }
    }


    /**
     * Creates new form AppInterface
     * @throws java.sql.SQLException
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txthost = new javax.swing.JTextField();
        txtuser = new javax.swing.JTextField();
        txtpc = new javax.swing.JTextField();
        btnrecherche = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        boxclav = new javax.swing.JCheckBox();
        boxsouris = new javax.swing.JCheckBox();
        boxcourdent = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        boxcasque = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnajouter = new javax.swing.JButton();
        btnmodifier = new javax.swing.JButton();
        btnsuprim = new javax.swing.JButton();
        btnferme = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 51, 255));

        jPanel1.setBackground(new java.awt.Color(153, 51, 255));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Matys Support Stock");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("hostname  :");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("user name :");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("pc model   :");

        txtuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuserActionPerformed(evt);
            }
        });

        btnrecherche.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        btnrecherche.setForeground(new java.awt.Color(0, 153, 153));
        btnrecherche.setText("Rechercher & Refresh");
        btnrecherche.setOpaque(true);
        btnrecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrechercheActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ID                   :");

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel6.setText("calvier");

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel7.setText("souris");

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel8.setText("courdent");

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel9.setText("casque");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxclav)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtuser)
                                            .addComponent(txthost, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                            .addComponent(txtpc)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxsouris)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxcourdent)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxcasque))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(btnrecherche)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txthost, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtuser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)
                                .addComponent(boxclav)
                                .addComponent(boxsouris)
                                .addComponent(jLabel8)
                                .addComponent(boxcourdent))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boxcasque)))
                .addGap(264, 264, 264)
                .addComponent(btnrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        jPanel3.setBackground(new java.awt.Color(204, 199, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null,  new Boolean(false), null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Host Name", "User Name", "Model Machine", "Clavier", "Souris", "Courdent", "Casque"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 200, 252));

        btnajouter.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnajouter.setForeground(new java.awt.Color(0, 153, 153));
        btnajouter.setText("Ajouter");
        btnajouter.setOpaque(true);
        btnajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnajouterActionPerformed(evt);
            }
        });

        btnmodifier.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnmodifier.setForeground(new java.awt.Color(0, 153, 153));
        btnmodifier.setText("Modifier");
        btnmodifier.setOpaque(true);
        btnmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifierActionPerformed(evt);
            }
        });

        btnsuprim.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnsuprim.setForeground(new java.awt.Color(0, 153, 153));
        btnsuprim.setText("Suprimer");
        btnsuprim.setOpaque(true);
        btnsuprim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuprimActionPerformed(evt);
            }
        });

        btnferme.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnferme.setForeground(new java.awt.Color(0, 153, 153));
        btnferme.setText("Ferme");
        btnferme.setAlignmentX(0.5F);
        btnferme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfermeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnmodifier, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnsuprim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnferme)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsuprim, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnmodifier, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnferme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuserActionPerformed

    private void btnajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnajouterActionPerformed
        try {
            String sql = "INSERT INTO stocktable" 
                    +" (hostname, username, computermodel, clavier, souris, courdent, casque)"
                    +" VALUES (?, ?, ?, ?, ?, ?, ?)";
            sqlcon = DriverManager.getConnection("jdbc:mysql://localhost/namedb", "name-local", "password");
            pst = sqlcon.prepareStatement(sql);
            pst.setString(1, txthost.getText());
            pst.setString(2, txtuser.getText());
            pst.setString(3, txtpc.getText());
//            determine whether they are checked (true) or not (false).
            pst.setBoolean(4, boxclav.isSelected());
            pst.setBoolean(5, boxsouris.isSelected());
            pst.setBoolean(6, boxcourdent.isSelected());
            pst.setBoolean(7, boxcasque.isSelected());
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Your data has been successfully saved. Thank you for using our service!");
        }catch(SQLException |HeadlessException e){
            JOptionPane.showInternalMessageDialog(null, e);
        }
        showTableData();
    }//GEN-LAST:event_btnajouterActionPerformed

    private void btnmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifierActionPerformed
        try {
            String sql = "UPDATE stocktable SET hostname=?, username=?, computermodel=?, clavier=?, souris=?, courdent=?, casque=? WHERE id=?";
            sqlcon = DriverManager.getConnection("jdbc:mysql://localhost/namedb", "name-local", "password");
            pst = sqlcon.prepareStatement(sql);
            pst.setString(8, txtid.getText());
            pst.setString(1, txthost.getText());
            pst.setString(2, txtuser.getText());
            pst.setString(3, txtpc.getText());
//            determine whether they are checked (true) or not (false).
            pst.setBoolean(4, boxclav.isSelected());
            pst.setBoolean(5, boxsouris.isSelected());
            pst.setBoolean(6, boxcourdent.isSelected());
            pst.setBoolean(7, boxcasque.isSelected());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "modification has been successfully processed !!");
        }catch(SQLException |HeadlessException e){
            JOptionPane.showInternalMessageDialog(null, e);
        }
        showTableData();
    }//GEN-LAST:event_btnmodifierActionPerformed

    private void btnrechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrechercheActionPerformed
        String hostSearchTerm = txthost.getText();
        String userSearchTerm = txtuser.getText();
        String pcSearchTerm = txtpc.getText();
    
        if (hostSearchTerm.isEmpty() && userSearchTerm.isEmpty() && pcSearchTerm.isEmpty()) {
        // Aucun terme de recherche n'est spécifié, affichez la table complète
            showTableData();
        } else {
        // Au moins un terme de recherche est spécifié, effectuez la recherche
            rechercherDonnees(hostSearchTerm, userSearchTerm, pcSearchTerm);
        }
    }//GEN-LAST:event_btnrechercheActionPerformed

    private void btnfermeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfermeActionPerformed
        // TODO add your handling code here:
        jframe = new JFrame("exit");
        if(JOptionPane.showConfirmDialog(jframe,"Êtes-vous sûr de vouloir éteindre votre Application ?","Fermeture D'Application",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            System.exit(0);
        }
        
    }//GEN-LAST:event_btnfermeActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void btnsuprimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuprimActionPerformed
        try {
            String sql = "DELETE FROM stocktable WHERE id = ? OR (hostname = ? AND username = ?)";
            sqlcon = DriverManager.getConnection("jdbc:mysql://localhost/namedb", "name-local", "password");
            pst = sqlcon.prepareStatement(sql);
            pst.setInt(1, Integer.parseInt(txtid.getText()));
            pst.setString(2, txthost.getText());
            pst.setString(3, txtuser.getText());
            int rowsDeleted = pst.executeUpdate();
        
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Data deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "No matching data found for deletion.");
            }
        }catch(SQLException |HeadlessException e){
            JOptionPane.showInternalMessageDialog(null, e);
        }
        showTableData();
    }//GEN-LAST:event_btnsuprimActionPerformed
public void showTableData(){
    try {
        sqlcon = DriverManager.getConnection("jdbc:mysql://namedb", "name-local", "password");
        String sql = "SELECT * FROM stocktable";
        pst = sqlcon.prepareStatement(sql);
        rs = pst.executeQuery();
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}

public void rechercherDonnees(String hostSearchTerm, String userSearchTerm, String pcSearchTerm) {
    try {
        // Établissez une connexion à la base de données
        Connection sqlcon = DriverManager.getConnection("jdbc:mysql://localhost/namedb", "name-local", "password");

        // Préparez la requête SQL de recherche
        String sql = "SELECT * FROM stocktable WHERE";
        boolean conditionsAdded = false;

        if (!hostSearchTerm.isEmpty()) {
            sql += " hostname LIKE ?";
            conditionsAdded = true;
        }

        if (!userSearchTerm.isEmpty()) {
            if (conditionsAdded) {
                sql += " AND";
            }
            sql += " username LIKE ?";
            conditionsAdded = true;
        }

        if (!pcSearchTerm.isEmpty()) {
            if (conditionsAdded) {
                sql += " AND";
            }
            sql += " computermodel LIKE ?";
        }

        PreparedStatement pst = sqlcon.prepareStatement(sql);

        int parameterIndex = 1;
        if (!hostSearchTerm.isEmpty()) {
            pst.setString(parameterIndex, "%" + hostSearchTerm + "%");
            parameterIndex++;
        }

        if (!userSearchTerm.isEmpty()) {
            pst.setString(parameterIndex, "%" + userSearchTerm + "%");
            parameterIndex++;
        }

        if (!pcSearchTerm.isEmpty()) {
            pst.setString(parameterIndex, "%" + pcSearchTerm + "%");
        }

        // Exécutez la requête
        ResultSet rs = pst.executeQuery();

        // Mettez à jour le modèle de la jTable1 avec les résultats de la recherche
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));

        rs.close();
        pst.close();
        sqlcon.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la recherche : " + ex.getMessage());
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AppInterface f = null;
                try {
                    f = new AppInterface();
                } catch (SQLException ex) {
                    Logger.getLogger(AppInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
                f.setVisible(true);
                f.setTitle("Matys Support Stock");
                f.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxcasque;
    private javax.swing.JCheckBox boxclav;
    private javax.swing.JCheckBox boxcourdent;
    private javax.swing.JCheckBox boxsouris;
    private javax.swing.JButton btnajouter;
    private javax.swing.JButton btnferme;
    private javax.swing.JButton btnmodifier;
    private javax.swing.JButton btnrecherche;
    private javax.swing.JButton btnsuprim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txthost;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtpc;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables
}
